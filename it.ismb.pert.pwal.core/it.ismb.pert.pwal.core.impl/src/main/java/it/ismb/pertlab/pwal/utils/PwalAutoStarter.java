/*
 * PWAL - Autostarter
 * 
 * 
 * Copyright (c) 2014 Dario Bonino
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
package it.ismb.pertlab.pwal.utils;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.ApplicationListener;
import org.springframework.context.event.ContextRefreshedEvent;
import org.springframework.stereotype.Component;

import it.ismb.pertlab.pwal.api.internal.Pwal;

/**
 * This class provides auto-start facilities for the PWAL. It allows to start
 * managers upon successful spring applicatio context initialization and
 * supports forced or native autostart. In forced mode, all available device
 * managers are started upon application context initialization. On the
 * converse, in native autostart mode, only device managers having the autostart
 * flag at true are started.
 * 
 * @author <a href="mailto:dario.bonino@gmail.com">Dario Bonino</a>
 *
 */
@Component
public class PwalAutoStarter implements ApplicationListener<ContextRefreshedEvent>
{
	//the class logger
	private static final Logger logger = LoggerFactory.getLogger(PwalAutoStarter.class);
	
	@Autowired
	@Qualifier("PWAL")
	// a reference to the PWAL bean
	private Pwal pwal;
	
	@Override
	/**
	 * Listens to ContextRefreshedEvents generated by Spring and reacts by starting device managers
	 */
	public void onApplicationEvent(final ContextRefreshedEvent arg0)
	{
		//log PWAL initialization completion
		PwalAutoStarter.logger.info("PWAL started: " + this.pwal);
		
		//log next activity, i.e. manager start
		PwalAutoStarter.logger.info("Starting device managers...");
		
		// start all - by now-  TODO: change this to true
		this.pwal.startManagers(true);
		
		//log autostart completed
		PwalAutoStarter.logger.info("All device managers have been started.");
		
	}
	
}
